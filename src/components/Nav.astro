---
    import { getTextColor, getLightBackgroundColor, getHighlightTextColor, getBackgroundColor } from '../lib/helpers';

    const { frontmatter } = Astro.props
    const color = frontmatter?.color ? frontmatter.color : 'is-warning'

    // imports all files that end with `.md` in `./src/pages/post/`
    const pages = await Astro.glob('../pages/*.md');
    const pathname = new URL(Astro.request.url).pathname;
    const currentPath = pathname.slice(1); // remove the first "/"

    function getLinkClasses(page) {
        let classes = " "
        classes += ('/' + currentPath == page.url || !currentPath && !page.url) ? getTextColor(page.frontmatter.color) + " " + getBackgroundColor(page.frontmatter.color) + " is-active " + getHighlightTextColor(page.frontmatter.color) + " "  : " " + getTextColor(page.frontmatter.color) + " "
        return classes
    }
---
<div class="container">

<div class={"navbar is-spaced " + color }>

    <!-- for toggling functionality. Should be at the same level as navbar-menu -->
    <input type="checkbox" id="toggler" class="toggler" />

    <div class="navbar-brand ml-3 in:fade">
        <a href="/">
            <h1 class={"is-size-5 branding-font is-sr-only pl-3 " + getTextColor(color)}>Essentia</h1>
            <img src="/images/logo-complete-small.png" alt="Salon Essentia - Pure schoonheid tot in de kern"/>
        </a>
        <label for="toggler" class={"navbar-burger is-transparent " + getBackgroundColor(color) + " " + getTextColor(color)} data-target="navbarMenuHeroC">
            <span></span>
            <span></span>
            <span></span>
        </label>
    </div>

    <div class="navbar-backdrop"></div>

    <div id="navbarMenuHeroC" class={"navbar-menu"}>

        <div class={"navbar-start in:fly-y:-200duration:500 out:fade " + getLightBackgroundColor(color) + ' ' + getTextColor(color)}>
            {pages.sort((obj1, obj2) =>
                obj1.frontmatter.index - obj2.frontmatter.index
            ).map((page) => (
            <a href={page.url ? page.url : '/'} rel="prefetch" class={"is-size-5 navbar-item mx-1 py-5 has-text-dark " + getLinkClasses(page) }>
                <span class="icon-text is-capitalized">
                    <span>{page.frontmatter.title}</span>
                </span>
            </a>
            ))}

        </div>
    </div>
</div>
</div>

<style lang="scss">
    .branding-font{
        font-family: 'Fuzzy Bubbles';
    }

    .navbar {
        height: 98px;
        z-index: 199;
    }

    .navbar-brand img {
        filter: drop-shadow(5px 5px 5px #222);
    }

    /* We don't need checkbox to be displayed in order for it to work */
    .toggler {
        display: none;
    }

    /* Hamburger changes to X when toggler is checked */
    .navbar .toggler:checked + .navbar-brand .navbar-burger span:nth-child(1) {
        transform: translateY(5px) rotate(45deg);
    }
    .navbar .toggler:checked + .navbar-brand .navbar-burger span:nth-child(2) {
        opacity: 0;
    }
    .navbar .toggler:checked + .navbar-brand .navbar-burger span:nth-child(3) {
        -webkit-transform: translateY(-5px) rotate(-45deg);
        transform: translateY(-5px) rotate(-45deg);
    }
    .navbar .navbar-start .navbar-item.is-active,
    .navbar .navbar-start .navbar-item:hover {
        color: white !important;
    }

    .navbar.is-warning .navbar-start > a.navbar-item:focus, .navbar .navbar-start > a.navbar-item:hover, .navbar.is-warning .navbar-start > a.navbar-item:hover, .navbar.is-warning .navbar-start > a.navbar-item.is-active, .navbar.is-warning .navbar-start .navbar-link:focus, .navbar.is-warning .navbar-start .navbar-link:hover, .navbar.is-warning .navbar-start .navbar-link.is-active, .navbar.is-warning .navbar-end > a.navbar-item:focus, .navbar.is-warning .navbar-end > a.navbar-item:hover, .navbar.is-warning .navbar-end > a.navbar-item.is-active, .navbar.is-warning .navbar-end .navbar-link:focus, .navbar.is-warning .navbar-end .navbar-link:hover, .navbar.is-warning .navbar-end .navbar-link.is-active {
        color: black !important;
    }

    /*  Displays menu on desktop and larger */
    @media screen and (min-width: 1024px) {
        .navbar {
            align-items: center;
        }

        .navbar .navbar-start {
            margin: 1rem;
            border-radius: 1rem;
            padding: 1rem;
            height: 3rem;
        }
    }

    /*  Displays menu when toggler is checked only on mobile/tablet */
    @media screen and (max-width: 1023px) {
        .navbar .toggler:checked ~ .navbar-menu {
            display: block;
            left: 0;
            top: 0;
            bottom: 0;
            width: 50vw;
            position: fixed;
            height: 100vh;
            transform: translate(0, 0);
            z-index: 70;
        }

        .navbar .toggler:checked ~ .navbar-backdrop {
            position: fixed;
            opacity: 1;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            content: "";
            height: 100vh;
            width: 100vw;
            background: rgba(0, 0, 0, 0.4) !important;
        }

        .navbar-brand {
            margin-top: 1rem;
            margin-left: 6rem;

            img {
                right: 3rem;
                top: 0;
            }
        }

        .navbar-backdrop {
            opacity: 0;
            transition: background 0.5s ease-in-out,
            opacity 0.55s ease;
        }

        /* We don't want menu to be displayed on mobile by default */
        .navbar-menu {
            padding: 0;
            position: absolute;
            display: none;
            transform-origin: 0% 0%;
            transform: translate(500px, 0);
            transition: 1s ease-in-out;
            height: 100vh;
            overflow: auto;
        }

        .navbar-menu .navbar-start {
                margin-top: 6rem;
                margin-left: 0 !important;
                border-radius: 0 !important;

        }

        .navbar-menu .navbar-start a.navbar-item, .navbar-menu .navbar-start .navbar-link {
            margin: 0 !important;
        }

    }

    .navbar-burger {
        position: fixed;
        left: 2rem;
        top: 1rem;
        height: 4rem;
        width: 4rem;
        z-index: 77;
        border-radius: 1rem;
    }


    @media screen and (max-width: 1023px) and (orientation: portrait) {
        .navbar-brand {
            margin-top: 1rem;
            margin-left: 6rem;

            img {
                transform: translate(7rem, 0)
            }
        }
    }

    @media screen and (max-width: 768px) {
        .navbar-burger {
            left: 1rem;
            top: 1rem;
        }

        .navbar {
            height:0px !important;
            min-height: unset;
        }
    }

    @media screen and (max-width: 768px) and (orientation: landscape) {
        .navbar .toggler:checked ~ .navbar-menu {
            width: 60vw;
        }
    }

    @media screen and (max-width: 768px) and (orientation: portrait) {
        * {
            font-size-adjust: 125%;
        }
        .container.is-fluid {
            padding-left: 0;
            padding-right: 0;
        }
        .navbar .toggler:checked ~ .navbar-menu {
            width: 100vw;
        }

        .navbar .navbar-menu {
            background: #f5f5f5 !important;
            color: black !important;
        }
        .navbar-brand {
            margin-top: 1rem;
            margin-left: 6rem;

            img {
                transform: translate(3rem, -15rem)
            }
        }
    }

    .is-active {
        transition: all .5s ease-in-out;
    }
</style>